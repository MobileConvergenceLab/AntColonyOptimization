#!/usr/bin/env python
# -*- coding: utf-8 -*- 
import sys
import os
import time
import threading
import subprocess
import argparse
import random

from mininet.net import Mininet
from mininet.topo import Topo
from mininet.topolib import TreeTopo
from mininet.util import dumpNodeConnections
from mininet.cli import CLI

SNDER_ID	= 1
RCVER_ID	= 2
SNDER_PORT  = 9901
RCVER_PORT  = 9902

class FonHost():
	def __init__(self):
		self.host = None
		self.switch = None
	

class FonTopo(Topo):
	def __init__(self):
		# Initialize topology
		Topo.__init__(self)

	def addHost(self, hostname, switchname):
		fonhost = FonHost()
		fonhost.host = Topo.addHost(self, hostname)
		fonhost.switch = Topo.addSwitch(self, switchname)
		Topo.addLink(self, fonhost.host, fonhost.switch)
		return fonhost

	def addLink(self, host1, host2):
		Topo.addLink(self, host1.switch, host2.switch)

class MyTopo(FonTopo):
	def __init__(self):
		# Initialize topology
		FonTopo.__init__(self)

		self.h1 = self.addHost('h1', 's1')
		self.h2 = self.addHost('h2', 's2')

		self.addLink(self.h1, self.h2)

'''
HOST	   FON host ID.
INTERNAL   Internal interface which will be conneted to OVS-Bridge.
BRNAME	 The name of OVS-Bridge which will be made.
MININET	Mininet mode flag
PORT	   IPC listen port number
IFLIST	 Physical interface names
'''
def run_fond(host, hostid, internal, bridge, mininet, port, iflist):
	cmdstr = 'xterm -e ./fond %d %s %s %d %d %s > /dev/null 2>&1 &' %(hostid, internal, bridge, mininet, port, iflist)
	print cmdstr
	# sendCmd()로 대체 가능할지도?
	host.cmd(cmdstr)

def run_sender(host, port, sender_id, receiver_id):
	cmdstr = 'xterm -e ./sender "%d" "%d" "%d"&' % (port, sender_id, receiver_id)
	print cmdstr
	host.cmd(cmdstr)

def run_receiver(host, port):
	cmdstr = 'xterm -e ./receiver "%d" &' % (port)
	print cmdstr
	host.cmd(cmdstr)

def main():

	if os.getuid() != 0:
		print("I cannot run as a mortal. Sorry.")
		sys.exit(1)

	my_topo = MyTopo()

	net = Mininet(topo=my_topo, controller = None)
	net.start()

	'''
	HOST	   FON host ID.
	INTERNAL   Internal interface which will be conneted to OVS-Bridge.
	BRNAME	 The name of OVS-Bridge which will be made.
	MININET	Mininet mode flag
	PORT	   IPC listen port number
	IFLIST	 Physical interface names
	'''
	run_fond(net.hosts[0], SNDER_ID, "h1-eth0", "s1", 1, SNDER_PORT, "h1-eth0")
	run_fond(net.hosts[1], RCVER_ID, "h2-eth0", "s2", 1, RCVER_PORT, "h2-eth0")

	time.sleep(0.1)

	run_sender(net.hosts[0], SNDER_PORT, SNDER_ID, RCVER_ID)
	run_receiver(net.hosts[1], RCVER_PORT)

	CLI(net)
	net.stop()

if __name__ == '__main__':
	main()


