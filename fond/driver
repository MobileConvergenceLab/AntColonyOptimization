#!/usr/bin/env python
# -*- coding: utf-8 -*- 
import sys
import os
import time
import threading
import subprocess
import argparse
import random

from mininet.net import Mininet
from mininet.topo import Topo
from mininet.topolib import TreeTopo
from mininet.util import dumpNodeConnections
from mininet.cli import CLI

class FonHost():
	def __init__(self):
		self.host = None
		self.switch = None
	

class FonTopo(Topo):
	def __init__(self):
		# Initialize topology
		Topo.__init__(self)

	def addHost(self, hostname, switchname):
		fonhost = FonHost()
		fonhost.host = Topo.addHost(self, hostname)
		fonhost.switch = Topo.addSwitch(self, switchname)
		Topo.addLink(self, fonhost.host, fonhost.switch)
		return fonhost

	def addLink(self, host1, host2):
		Topo.addLink(self, host1.switch, host2.switch)

class MyTopo(FonTopo):
	def __init__(self):
		# Initialize topology
		FonTopo.__init__(self)

		h1 = self.addHost('h1', 's1')
		h2 = self.addHost('h2', 's2')
		h3 = self.addHost('h3', 's3')

		self.addLink(h1, h2)
		self.addLink(h2, h3)

def main():
	my_topo = MyTopo()

	net = Mininet(topo=my_topo, controller =None)
	net.start()

	CLI(net)
	net.stop()

if __name__ == '__main__':
	main()


